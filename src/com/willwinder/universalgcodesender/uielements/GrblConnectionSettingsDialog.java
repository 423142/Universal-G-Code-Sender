/*
 * Simple dialog for configuring GRBL settings.
 */
/*
    Copywrite 2013 Will Winder

    This file is part of Universal Gcode Sender (UGS).

    UGS is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    UGS is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with UGS.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.willwinder.universalgcodesender.uielements;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author wwinder
 */
public class GrblConnectionSettingsDialog extends javax.swing.JDialog {
    private boolean saveChanges;
    
    /**
     * Creates new form GrblSettingsDialog
     */
    public GrblConnectionSettingsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        saveChanges = false;
    }
    
    /**
     * Return status.
     */
    public boolean saveChanges() {
        return saveChanges;
    }

    /**
     * Getters for all the values.
     */
    public boolean getSpeedOverrideEnabled() {
        return this.overrideSpeedCheckBox.isSelected();
    }
    
    public boolean getSingleStepModeEnabled() {
        return this.singleStepModeCheckBox.isSelected();
    }
    
    public int getSpeedOverridePercent() {
        return Integer.parseInt(this.overrideSpeedPercentSpinner.getValue().toString());
    }
    
    public int getMaxCommandLength() {
        return Integer.parseInt(this.maxCommandLengthSpinner.getValue().toString());
    }
    
    public int getTruncateDecimalLength() {
        return Integer.parseInt(this.truncateDecimalDigitsSpinner.getValue().toString());
    }
    
    /**
     * Setters for all the values.
     */
    public void setSpeedOverrideEnabled(boolean enabled) {
        this.overrideSpeedCheckBox.setSelected(enabled);
    }
    
    public void setSpeedOverridePercent(int overridePercent) {
        this.overrideSpeedPercentSpinner.setValue(overridePercent);
    }
    
    public void setSingleStepModeEnabled(boolean enabled) {
        this.singleStepModeCheckBox.setSelected(enabled);
    }
    
    public void setMaxCommandLength(int commandLength) {
        this.maxCommandLengthSpinner.setValue(commandLength);
    }
    
    public void setTruncateDecimalLength(int truncateLength) {
        this.truncateDecimalDigitsSpinner.setValue(truncateLength);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        overrideSpeedCheckBox = new javax.swing.JCheckBox();
        overrideSpeedPercentSpinner = new javax.swing.JSpinner();
        overrideSpeedPercentLabel = new javax.swing.JLabel();
        maxCommandLengthSpinner = new javax.swing.JSpinner();
        maxCommandLengthLabel = new javax.swing.JLabel();
        truncateDecimalDigitsLabel = new javax.swing.JLabel();
        truncateDecimalDigitsSpinner = new javax.swing.JSpinner();
        singleStepModeCheckBox = new javax.swing.JCheckBox();
        titleLabel = new javax.swing.JLabel();
        closeWithSave = new javax.swing.JButton();
        closeWithoutSave = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        overrideSpeedCheckBox.setText("Enable speed override");

        overrideSpeedPercentSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(1), null, Integer.valueOf(1)));

        overrideSpeedPercentLabel.setText("Speed override percent");

        maxCommandLengthSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(50), Integer.valueOf(1), null, Integer.valueOf(1)));

        maxCommandLengthLabel.setText("Max command length");

        truncateDecimalDigitsLabel.setText("Truncate decimal digits");

        truncateDecimalDigitsSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(1), null, Integer.valueOf(1)));

        singleStepModeCheckBox.setText("Enable single step mode");

        titleLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        titleLabel.setText("GRBL Connection Settings");

        closeWithSave.setText("Save and close");
        closeWithSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeWithSaveActionPerformed(evt);
            }
        });

        closeWithoutSave.setText("Close");
        closeWithoutSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeWithoutSaveActionPerformed(evt);
            }
        });

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(helpButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeWithoutSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeWithSave)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(maxCommandLengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maxCommandLengthLabel))
                            .addComponent(titleLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(overrideSpeedPercentSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(overrideSpeedPercentLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(overrideSpeedCheckBox))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(truncateDecimalDigitsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(truncateDecimalDigitsLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(singleStepModeCheckBox)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(overrideSpeedCheckBox)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(overrideSpeedPercentLabel)
                    .addComponent(overrideSpeedPercentSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(maxCommandLengthSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxCommandLengthLabel))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(truncateDecimalDigitsSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(truncateDecimalDigitsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(singleStepModeCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeWithSave)
                    .addComponent(closeWithoutSave)
                    .addComponent(helpButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeWithoutSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeWithoutSaveActionPerformed
        this.saveChanges = false;
        setVisible(false);
    }//GEN-LAST:event_closeWithoutSaveActionPerformed

    private void closeWithSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeWithSaveActionPerformed
        this.saveChanges = true;
        setVisible(false);
    }//GEN-LAST:event_closeWithSaveActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        String message =
                "Enable speed override: Enables or disables speed overriding." +
                "\n\nSpeed override percent: Factor that speeds will be scaled by." +
                "\n\nMax command length: Maximum length of a command before an error is triggered." +
                "\n\nTruncate decimal digits: Number of fractional digits that will be sent to firmware." +
                "\n\nEnable single step mode: Turns on single step mode, this is very slow.";
        
        JOptionPane.showMessageDialog(new JFrame(), 
                message, 
                "GRBL Connection Setting Help",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_helpButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeWithSave;
    private javax.swing.JButton closeWithoutSave;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel maxCommandLengthLabel;
    private javax.swing.JSpinner maxCommandLengthSpinner;
    private javax.swing.JCheckBox overrideSpeedCheckBox;
    private javax.swing.JLabel overrideSpeedPercentLabel;
    private javax.swing.JSpinner overrideSpeedPercentSpinner;
    private javax.swing.JCheckBox singleStepModeCheckBox;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel truncateDecimalDigitsLabel;
    private javax.swing.JSpinner truncateDecimalDigitsSpinner;
    // End of variables declaration//GEN-END:variables
}
